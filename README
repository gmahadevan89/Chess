********************************************************************************
********************** IMPLEMENTATION OF CHESS SCHEDULER ***********************
********************************************************************************

T A Mahadevan     | ta.mahadevan@gmail.com
Chaitanya Andhare | mcs122811@cse.iitd.ac.in

********************************************************************************

--------------------------------------------------------------------------------

Usage:
Put the source code of the program to be tested in a single .c file.

Compile: 
	 make TEST=<path-to-file>

Run:
	./chess_scheduler test

Clean up object files, binaries, trace files and replay files:
      	 make clean

To clean up only the trace and replay files:
   	 make clean_r

--------------------------------------------------------------------------------

Notes:
The scheduler systematically explores all possible interleavings of a multi-
threaded program. Any buggy interleavings that lead to an unsuccesful
termination of the test program are recorded in a trace file in the folder
errs/.

The format of each entry in the trace files generated in errs/ folder are of 
the form

<SO> <CRT> <SPNCT> <ST> # <LRT>

SO - Synchronization operation.
CRT - Current Running Thread Number.
SPNCT - Synchronization Point Number in Current Thread.
ST - Switch Thread (The thread number to switch to) .
LRT - List of Ready Threads.

for example an entry like

"pthread_join 0 3 3 # 0 1 3"  means that the current thread which is 0, is at its
3rd sychronization point which is a pthread_join operation and at this point a 
switch is made to thread 3. The list of available or ready threads that can be
scheduled at this point are 0,1 and 3.


Examples of test programs with some buggy interleavings can be found in the
examples/ folder.

********************************************************************************
